<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mine.mapper.PlatformMapper" >
  <resultMap id="BaseResultMap" type="com.mine.bean.Platform" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="platform_name" property="platformName" jdbcType="VARCHAR" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_mobile" property="contactMobile" jdbcType="VARCHAR" />
    <result column="platform_desc" property="platformDesc" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <collection property="applicationList" resultMap="com.mine.mapper.ApplicationMapper.BaseResultMap"  columnPrefix="ca_"  />
  </resultMap>

  <sql id="Base_Column_List" >
    id, platform_name, contact_name, contact_mobile, platform_desc, update_time
  </sql>

  <sql id="pageWhere">
    <where>
      <if test="id != null and id.trim().length() > 0">
        and id like concat('%',#{id},'%')
      </if>
      <if test="platformName != null and platformName.trim().length() > 0">
        and platform_name like concat('%',#{platformName},'%')
      </if>
      <if test="contactName != null and contactName.trim().length() > 0">
        and contact_name like concat('%',#{contactName},'%')
      </if>
    </where>
  </sql>


  <!--  分页查询       -->
  <select id="list" resultMap="BaseResultMap" parameterType="com.mine.bean.Platform" >
    select 
    <include refid="Base_Column_List" />
    from platform
    <include refid="pageWhere" />
    order by id
    LIMIT #{offset} , #{limit}
  </select>

  <!--  查询数量   -->
  <select id="count" parameterType="com.mine.bean.Platform" resultType="int" >
    select count(*) from platform
    <include refid="pageWhere" />
  </select>


  <!--  查询平台列表   -->
  <select id="listPlatformAndApp" parameterType="map" resultType="map" >
    select t1.id as application_id, t1.application_name,
    t2.id as platform_id, t2.platform_name
    from application t1 LEFT JOIN platform t2 on t1.platform = t2.id
    where t1.id in
    <foreach collection='collection' item='item' separator=',' open='(' close=')' >
        #{item}
    </foreach>
    order by t2.id
  </select>

  <!--  根据主键删除     -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from platform
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--   插入平台         -->
  <insert id="insert" parameterType="com.mine.bean.Platform" >
    insert into platform (id, platform_name, contact_name, 
      contact_mobile, platform_desc, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{platformName,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR}, 
      #{contactMobile,jdbcType=VARCHAR}, #{platformDesc,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <!--   根据主键更新     -->
  <update id="updateByPrimaryKey" parameterType="com.mine.bean.Platform" >
    update platform
    set platform_name = #{platformName,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_mobile = #{contactMobile,jdbcType=VARCHAR},
      platform_desc = #{platformDesc,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--  查询授权服务树形菜单     -->
  <select id="selectApplicationTree" resultMap="BaseResultMap" >
      select p.id, p.platform_name,a.application_name as ca_application_name,a.id as ca_id
      from platform p inner join application a on p.id = a.platform
  </select>

</mapper>